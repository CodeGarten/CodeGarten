@model Structure
@using CodeGarten.Data.Access
@using CodeGarten.Data.Model
@{
    var dataBaseManager = (DataBaseManager)Context.Items["DataBaseManager"];
    var prototypes = dataBaseManager.ContainerType.GetAll(Model.Id);
    var fatherPrototype = prototypes.Where(cp => cp.Parent == null).FirstOrDefault();
    var roles = dataBaseManager.Role.GetAll(Model.Id);
    var rules = dataBaseManager.Rule.GetAll(Model.Id);
}

<h2>Structure Design</h2>
<div id="container_structure">
    @Html.Partial("_Prototype", fatherPrototype)
</div>
<div class="clear"></div>
<div id="container_structure_design">
    <h2>Container type Design</h2>
    <div class="ui-state-highlight ui-corner-all">
        <p>
            <span class="ui-icon ui-icon-info"></span>
            <strong>Select a Prototype</strong>
        </p>
    </div>

    @foreach (ContainerType prototype in prototypes)
    {
        <div id='@prototype.Name' class='ui-widget'>
            <div class='ui-widget-header'>
                <h2>@prototype.Name</h2>
            </div>
            <div class='ui-widget-content'>
            <div class="workspaces" >
            @foreach (WorkSpaceType workspace in prototype.Bindings.Select(b => b.WorkSpaceType).Distinct())
            {
                var id = prototype.Name+"-"+workspace.Name;
                @Html.RadioButton(prototype.Name+"workspace", id, new { id = id, onclick = "javascript:PrototypeInfo('" +prototype.Name+ "','"+workspace.Name+"')" })
                @Html.Label(id, workspace.Name)   
            }
            </div>
            <h3>Roles</h3>
            @foreach (var group in roles.Where(r => r.ContainerTypeName == prototype.Name).GroupBy(r => r.Binding.WorkSpaceType))
            {
                <div id='info-@prototype.Name-@group.Key.Name' class="ProtoInfo-@prototype.Name">
                    <table class="ui-widget ui-widget-content">
		                <thead>
			                <tr class="ui-widget-header ">
				                <th>RoleType</th>
				                <th>Barrier</th>
                                <th>Rules</th>
			                </tr>
		                </thead>
		                <tbody>
                        @foreach (var role in group)
                        { 
                            <tr>
				                <td>@role.RoleTypeName
                                </td>
				                <td>
                                    @switch(role.Barrier)
                                    {
                                        case 1:
                                            <text>Top ( </text>
                                                <span class="ui-icon ui-icon-arrowstop-1-s"></span>
                                            <text> )</text>
                                            break;
                                        case 2:
                                            <text>Bottom ( </text>
                                                <span class="ui-icon ui-icon-arrowstop-1-n"></span>
                                            <text> )</text>
                                            break;
                                        case 3:
                                            <text>All ( </text>
                                                <span class="ui-icon ui-icon-arrowstop-1-s"></span>
                                                <span class="ui-icon ui-icon-arrowstop-1-n"></span> 
                                            <text> )</text>
                                            break;
                                        default:
                                            <text>No Barriers</text>
                                            break;
                                    }
                                </td>
                                <td>
                                @foreach (var rule in role.Rules)
                                { 
                                    <a onclick="javascript:$('#rule-@rule.Name').dialog('open')">@rule.Name</a>
                                }
                                </td>
			                </tr>
                        }
                        </tbody>
                    </table>
                </div>
            }
            </div>
        </div>
    }
</div>

@foreach (var rule in rules)
{
    <div id="rule-@rule.Name" class="rule" title="Rule @rule.Name">
        <div class="tabs">
            <ul>
                @foreach (var service in rule.Permissions.Select(p => p.ServiceType).Distinct())
                { 
                    <li><a href="#@rule.Name-@service.Name">@service.Name</a></li>
                }
            </ul>

            @foreach (var serviceGroup in rule.Permissions.GroupBy(p => p.ServiceType))
            {
                <div id="@rule.Name-@serviceGroup.Key.Name">
                    <h3>Permissions</h3>
                    <ul>
                        @foreach (var permission in serviceGroup)
                        {
                            <li>
                                @permission.Name
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
}

<script type="text/javascript">

    $("#container_structure_design table a").button();
    $("#container_structure_design > .ui-widget").hide();
    $(".workspaces").buttonset();
    $(".info").hide();
    function PrototypeDesign(prototypeName) {
        $("#container_structure_design > .ui-state-highlight").remove();
        $("#container_structure_design > .ui-widget").hide();
        $("#" + prototypeName).show();
    }

    function PrototypeInfo(proto, work) {
        $(".ProtoInfo-"+proto).hide();
        $("#info-" + proto + "-" + work).show();
    }

    $(".rule").dialog({ autoOpen: false, resizable: false });

    var array = $("#container_structure_design > .ui-widget").toArray();
    for (var i in array)
        $(array[i]).find(".ui-widget-content>.workspaces>input[type=\"radio\"]").first().click();
    

</script>