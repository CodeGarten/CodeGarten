@model CodeGarten.Data.Model.Structure
@using CodeGarten.Web.Model
@{
    ViewBag.Title = "Design";
}
@if (ViewBag.PreventEdit == null || !ViewBag.PreventEdit)
{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"> </script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"> </script>
    <script src="@Url.Content("~/Scripts/json2.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/scripts/DialogConfirmView.js")" type="text/javascript"></script>
}
<script src="@Url.Content("~/Content/Scripts/ErrorPlaceholder.js")" type="text/javascript" > </script>
<script src="@Url.Content("~/Content/Scripts/FormDialog.js")" type="text/javascript" > </script>
<script src="@Url.Content("~/Content/scripts/Eventcontroller.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/scripts/ComponentsView.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/scripts/Workspace.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/scripts/RoleType.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/scripts/Rule.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/scripts/Tree.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/Scripts/StructureController.js")" type="text/javascript" ></script>
<script src="@Url.Content("~/Content/Scripts/CodeGartenModel.js")" type="text/javascript" ></script>
<script src="@Url.Content("~/Content/Scripts/StructureView.js")" type="text/javascript" ></script>
<script type="text/javascript">
    $("#main").mask("Loading...", 500);
    StructureModel.init(@Model.Id);
</script>
@if (ViewBag.PreventEdit == null || !ViewBag.PreventEdit)
{
    <div id="title">
        <h1>@Model.Name Design</h1>
    </div>
}
<div>
    <div>
        <h2>
            Basic structure</h2>
        <div id="container_structure">
        </div>
        @if (ViewBag.PreventEdit == null || !ViewBag.PreventEdit)
        {
            <div id="error_container_structure">
            </div>
        }
    </div>
    <div class="clear">
    </div>
    <div id="tree_design">
        <h2>
            Container prototype details</h2>
        <div id="containerPrototypeDesign">
        </div>
        <div id="components">
        </div>
        @if (ViewBag.PreventEdit == null || !ViewBag.PreventEdit)
        {
            <div id="error">
            </div>
        }
    </div>
    <div class="clear">
    </div>
    @if (ViewBag.PreventEdit == null || !ViewBag.PreventEdit)
    {
        <div id="actions">
            <button>
                Back to My Structures</button>
            <button>
                Save</button>
            <button>
                Publish</button>
        </div>
    }
</div>
@if (ViewBag.PreventEdit == null || !ViewBag.PreventEdit)
{
    <div id="workspaceCreate">
        @Html.Partial("_WorkspaceCreateForm", new WorkSpaceTypeView())
    </div>
    <div id="roleTypeCreate">
        @Html.Partial("_RoleTypeCreateForm", new RoleTypeView())
    </div>
    <div id="ruleCreate">
        @Html.Partial("_RuleCreateForm", new RuleView())
    </div>
    <div id="form_containerPrototype">
        @Html.Partial("_ContainerPrototypeCreateForm", new ContainerPrototypeView())
    </div>
    <div id="dialog_confirm">
    </div>
}
<script type="text/javascript">
    TreeController.Init("#containerPrototypeDesign");
    WorkspaceController.Init("#workspaceCreate", @Model.Id, @(ViewBag.PreventEdit == null || !ViewBag.PreventEdit ? "false" : "true"));
    RoleTypeController.Init("#roleTypeCreate", @Model.Id, @(ViewBag.PreventEdit == null || !ViewBag.PreventEdit ? "false" : "true"));
    RuleController.Init("#ruleCreate", @Model.Id, @(ViewBag.PreventEdit == null || !ViewBag.PreventEdit ? "false" : "true"));
    ComponentsView.Init("#components", "Components", ["Workspace", "RoleType", "Rule"], @(ViewBag.PreventEdit == null || !ViewBag.PreventEdit ? "false" : "true"));
    
    StructureView.init("#container_structure", "#form_containerPrototype", "#error_container_structure");
    StructureController.init();

    @if (ViewBag.PreventEdit == null || !ViewBag.PreventEdit)
    {
        <text>

    EventController.Init("#error");

    $("#actions").children().button();

    var Publish = function(callback)
    {
        Save(function() {
                $("#main").mask("Verifying and publishing...", 500);
                $.ajax(
                    {
                        url: "/Structure/Publish/" + @Model.Id ,
                        type: 'POST',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        async: false,
                        success: function(response) {
                            $("#main").unmask(); 
                            if (response.Success) {
                                if (callback)
                                    callback();
                            }
                            else
                                EventController.LocalError("#actions", response.Errors[0].Error);
                        }
                    }
                );  
            });
    };

    var Save = function(callback) {
        $("#main").mask("Saving...", 500);
        var roles = TreeController.GetAllRoles();
        
        $.ajax(
        {
            url: "/Structure/Design/" + @Model.Id,
            type: 'POST',
            data: JSON.stringify({roles: roles}),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
               $("#main").unmask(); 
               if(!response.Success)
                   EventController.LocalError("#actions", response.Errors[0].Error);
               else
                   if(callback)
                    callback(roles);
            }
        }
     );
    };

    $("#actions button:contains(Save)").button("option", "icons", { primary: "ui-icon-disk" }).click(function() {
        Save(function () {
            EventController.LocalSuccess("#actions", "Saved.");
        });
    });

    $("#actions button:contains(Publish)").click(function() {
        DialogConfirmView.open("Are you sure?", "After publishing a structure you cannot go back to designing it.", function() {
            Publish(function() {
                window.location = "/Structure/Index/" + @Model.Id ;
            });
        });
    });
    
        $("#actions button:contains(Back to My Structures)").button("option", "icons", { primary: "ui-icon-arrowthick-1-w" }).click(function() {
            document.location = '@Url.Action("Index", "Structure")' ;
    });

    DialogConfirmView.init("#dialog_confirm");
    </text>
    }
    else
    {
        <text>
            $("#container_structure .ui-icon").remove();
//            $("#containerPrototypeDesign").css('width','880px');
        </text>
    }
    $("#main").unmask();
</script>
