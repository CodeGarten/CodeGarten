@model CodeGarten.Data.Model.Structure
@using CodeGarten.Web.Model
@{
    ViewBag.Title = "Design";
}
<script src="@Url.Content("~/Content/Scripts/ErrorPlaceholder.js")" type="text/javascript" ></script>
<script src="@Url.Content("~/Content/Scripts/FormDialog.js")" type="text/javascript" ></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/scripts/ComponentsView.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/scripts/Workspace.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/scripts/RoleType.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/scripts/Rule.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/scripts/Tree.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/scripts/Eventcontroller.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/json2.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/scripts/DialogConfirmView.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/Scripts/StructureController.js")" type="text/javascript" ></script>
<script src="@Url.Content("~/Content/Scripts/CodeGartenModel.js")" type="text/javascript" ></script>
<script src="@Url.Content("~/Content/Scripts/StructureView.js")" type="text/javascript" ></script>
<script type="text/javascript">
    $("#main").mask("Loading...", 500);
    StructureModel.init(@Model.Id);
</script>
<div id="title">
    <h1>@Model.Name Design</h1>
</div>
<div>
    <div>
        <h2>
            Basic structure</h2>
        <div id="container_structure">
        </div>
        <div id="error_container_structure">
        </div>
    </div>
    <div id="tree_design">
        <h2>
            Container prototype details</h2>
        <div id="containerPrototypeDesign">
        </div>
        <div id="components">
        </div>
        <div id="error">
        </div>
    </div>
    <div id="action_clear">
    </div>
    <div id="actions">
        <button>
            Save</button>
        <button>
            Publish</button>
    </div>
</div>
<div id="workspaceCreate">
    @Html.Partial("_WorkspaceCreateForm", new WorkSpaceTypeView())
</div>
<div id="roleTypeCreate">
    @Html.Partial("_RoleTypeCreateForm", new RoleTypeView())
</div>
<div id="ruleCreate">
    @Html.Partial("_RuleCreateForm", new RuleView())
</div>
<div id="form_containerPrototype">
    @Html.Partial("_ContainerPrototypeCreateForm", new ContainerPrototypeView())
</div>
<div id="dialog_confirm">
</div>
<script type="text/javascript">
    TreeController.Init("#containerPrototypeDesign");
    WorkspaceController.Init("#workspaceCreate", @Model.Id);
    RoleTypeView.Init("#roleTypeCreate", @Model.Id);
    RuleView.Init("#ruleCreate", @Model.Id);
    ComponentsView.Init("#components", "Components", ["Workspace", "RoleType", "Rule"]);

    EventController.Init("#error");

    $("#actions").children().button();

    $("#actions button:contains(Save)").button("option","icons", { primary: "ui-icon-disk" }).click(function () {
        $("#main").mask("Saving...", 500);
        var roles = TreeController.GetAllRoles();
        
        $.ajax(
        {
            url: "/Structure/Design/" + @Model.Id,
            type: 'POST',
            data: JSON.stringify({roles: roles}),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
               $("#main").unmask(); 
               if(!response.Success)
                   EventController.LocalError("#actions", response.Errors[0].Error);
               else
                   EventController.LocalSuccess("#actions", "Saved.");
            }
        }
     );
    });

    $("#actions button:contains(Publish)").click(function() {
        DialogConfirmView.open("Are you sure?", "After publishing a structure you cannot go back to designing it.", function() {
            $.ajax(
                {
                    url: "/Structure/Publish/" + @Model.Id ,
                    type: 'POST',
                    dataType: 'html',
                    contentType: 'application/json; charset=utf-8',
                    async: false,
                    success: function() {
                        window.location = "/Structure/Index/" + @Model.Id ;
                    }
                }
     );
        });
    });

    DialogConfirmView.init("#dialog_confirm");
    
    
    StructureView.init("#container_structure", "#form_containerPrototype", "#error_container_structure");
    StructureController.init();
    
    $("#main").unmask();
</script>
