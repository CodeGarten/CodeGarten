@using CodeGarten.Data.Access
@using CodeGarten.Data.Model
@model Container
@{
    var dbMan = (DataBaseManager)Context.Items["DataBaseManager"];

    var owner = Model.Prototype.Structure.Administrators.Select(a => a.Name).Contains(User.Identity.Name);

    var enrolled = dbMan.User.Get(User.Identity.Name).Enrolls.SingleOrDefault(e => e.ContainerId == Model.Id && !e.Inherited);
}
<div class="ui-widget" id="actions_widget">
    <div class="ui-widget-header">
        <h3>
            Actions</h3>
    </div>
    <div class="ui-widget-content">
        @if (owner)
        {
            <div>
                @Html.ActionLink("Delete", "Delete", new { id = Model.Id, structureId = Model.Prototype.StructureId }, new { @class = "delete_button" })
            </div>
        }
        <div>
            @if(enrolled == null)
            {
                @Html.ActionLink("Enroll", "Enroll", new { structureId = Model.Prototype.StructureId, containerId = Model.Id }, new { @class = "button" })
            }else{
                <a href="javascript:ConfirmDisenroll()" class="button">Disenroll</a>
            }
        </div>
    </div>
</div>

@if(enrolled != null)
{
<div id="disenrollDialogConfirm" title="Disenroll @@ @Model.Name">
    Are you sure?
</div>
    
<script type="text/javascript">
    var url = '@Url.Action("Disenroll", new { structureId = Model.Prototype.StructureId, containerId = Model.Id, roleTypeName = enrolled.RoleTypeName })';
    url = url.replace(/amp;/g, "");
    $("#disenrollDialogConfirm").dialog({
        autoOpen: false,
        resizable: false,
        buttons: {
            Yes: function () {
                window.location = url;
                $(this).dialog("close");
            },
            No: function () {
                $(this).dialog("close");
            }
        }
    });

    function ConfirmDisenroll() {
        $("#disenrollDialogConfirm").dialog("open");
    }
</script>
}